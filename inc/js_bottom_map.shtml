<script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js"></script>
<script async defer src="https://maps.googleapis.com/maps/api/js?callback=initMap"></script>
<script>

    function initMap(filter_params) {
        filter_params = filter_params || '';
        var map = new google.maps.Map(document.getElementById('map'), {
            center: new google.maps.LatLng(25.040809, 121.537214),
            zoom: 15,
            disableDefaultUI: true,
            zoomControl:true,
        });
        var infoWindow = new google.maps.InfoWindow;
        // Change this depending on the name of your PHP or XML file //https://storage.googleapis.com/mapsdevsite/json/mapmarkers2.xml
        var marker_array = [];
        downloadUrl('https://storage.googleapis.com/mapsdevsite/json/mapmarkers2.xml', function(data) {
            var xml = data.responseXML;
            var markers = xml.documentElement.getElementsByTagName('marker');
            Array.prototype.forEach.call(markers, function(markerElem) {
                
                //--------get value----------
                var id = markerElem.getAttribute('id');
                var title = markerElem.getAttribute('title');
                var icon_type = markerElem.getAttribute('icon');
                var point = new google.maps.LatLng(
                    parseFloat(markerElem.getAttribute('lat')),
                    parseFloat(markerElem.getAttribute('lng')));
                //---------------------------
                
                var image = "https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png";
                var marker = new google.maps.Marker({
                    map: map,
                    position: point,
                    station_id:id,
                    icon: image,
                    icon_type:icon_type,
                });
                marker_array.push(marker);
                
                marker.addListener('click', function(e) {
    
                });


            });
        });
    }


    function downloadUrl(url, callback) {
        var request = window.ActiveXObject ?
            new ActiveXObject('Microsoft.XMLHTTP') :
            new XMLHttpRequest;
        request.onreadystatechange = function() {
          if (request.readyState == 4) {
            request.onreadystatechange = doNothing;
            callback(request, request.status);
          }
        };

        request.open('GET', url, true);
        request.send(null);
    }

    function doNothing() {

    }

    function getStation($id) {
        if (!$id) return false;
        $.ajax({
            type: "GET",
            url: "/tribe/getStation/" + $id,
            success: function(result) {
                //console.log(result);
                $("#this_display").html($.tmpl(template,result));
                //do something
            }
        })

    }
</script>